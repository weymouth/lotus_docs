Open a terminal window

Install supporting software
    $ sudo apt-get update
    $ sudo apt-get upgrade
    $ sudo apt-get install build-essential git gfortran
    	check for v 4.8+:
    	$ which gfortran; gfortran -v
    $ sudo apt-get install libopenmpi-dev openmpi-bin
    	check for v 4.8+:
    	$ which mpif90; mpif90 -v

    Check version of Paraview in Software Center. If <4.3:
    Download paraview from Ubuntu software.

    Check python version, should be 3.5+
    $ python3 -V
    Install libraries
	$ sudo apt install python3-numpy python3-scipy python3-pandas

Add profile
	Create a ~/.profile file in the home directory
	Open the file in a text editor, add the following lines, save and close
		export MGLHOME=$HOME'/Workspace/Lotus/solver'
		export PATH=$PATH:$MGLHOME/bin:$MGLHOME/oop/bin
		export MPI='true'
		export F90='gfortran'
		alias open='xdg-open'
		ulimit -s unlimited
	Source the .profile file into the .bashrc file
	$ echo "source ~/.profile" >> ~/.bashrc

IMPORTANT!
	You might already have a ~/.profile with the following lines:
		if [ -n "$BASH_VERSION" ]; then
		    # include .bashrc if it exists
		    if [ -f "$HOME/.bashrc" ]; then
			. "$HOME/.bashrc"
		    fi
		fi
	And if you "source ~/.profile" from .bashrc then it'll create an infinite loop, holding up the terminal.
	To fix this just comment the above if statement out:
		nano ~/.profile
		Then add #*space* in front of these lines.
	
Adding library files and compile solver
	You need to have access to the private Github repositories containing the source files
	to be able to clone them into your computer. Email a Lotus contributor to request access.
  	$ mkdir -p ~/Workspace/Lotus/
  	$ cd ~/Workspace/Lotus/
  	$ git clone https://github.com/weymouth/lotus_geom_lib solver
  	$ cd solver
  	$ git clone https://github.com/weymouth/lotus_oop oop
	# Now you should have both the geom and the fluid libraries at solver/geom_lib and solver/oop respectively
	# Next, we compile them as follows
	$ cd geom_lib
	$ make
	$ cd ../oop
	$ make

Example simulation:
    Run a sphere simulation with the lotus.f90 file in docs/examples
	$ mkdir -p ~/Workspace/Lotus/projects/
	Now copy the project folder 'sphere' in there (download from Github).
	
	In the ~/Workspace/Lotus/projects/sphere repository you should have 
	the lotus.f90 and postproc/stat.py files which determine what simulation 
	is run, the name of the	output files, and what is printed in them. Essentially 
	all of this can be customized.

    Now you can try running the sphere program.
	$ cd ~/Workspace/Lotus/projects/sphere
	$ runLotus 2 test

   Take a look at the results:
    $ cd test
	$ ls
	You should see many files, including:
	    Copies of input files: lotus.f90 and stat.py (postprocessing script)
	    Output text files: fort.8, fort.9
            Output images: out_vort.png render/*
	    Output binary files: fluid.vt*.pvd and dat*/*
	    A summary report: report.pdf

    Open report.pdf:
	This file is generated by applying the stat.py script to 
	the data in fort.9 and fort.8. It shows the pressure forces (in x,y,z),
	the CFL number, the pressure solver convergence and iteration count,
	and a copy of the out_vort.png. 

